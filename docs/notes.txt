// logging

plugin.Logger(ctx).Info("tableJSONDebug, cols:", d.QueryContext.Columns)

// .tables
SELECT name FROM osquery_registry WHERE registry='table'

// debugging pty 
cmd0 := exec.Command("pwd")
var err0 error
cmd0.Dir = "/home/sven/go"
c.ptmx0, err0 = startCommandWithPty(cmd0)
if err0 != nil {
    return fmt.Errorf("failed to start cmd1: %v", err0)
}

// Wait for the response
scanner := bufio.NewScanner(c.ptmx0)
for scanner.Scan() {
    line := scanner.Text()
    plugin.Logger(ctx).Info("Received go env:", line)
}

// Merch request: grpc/quals.go
func QualToString(ctx context.Context, q *proto.Qual) string {
	fieldName := q.FieldName
	operator := q.GetStringValue()
	value := GetQualValue(ctx, q.Value)

	// Build the output string using string concatenation
	return "Column: " + fieldName + ", Operator: '" + operator + "', Value: '" + fmt.Sprintf("%v", value) + "'"
}